
create table if not exists cart (
    id identity not null primary key,
    user_id varchar not null,
    date_created date not null,
    date_modified date,
    date_bought date,
    transaction_id varchar not null
);

ALTER TABLE cart ALTER COLUMN id RESTART WITH 1000;

-- Price item_price
CREATE TABLE IF NOT EXISTS item_price (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    --item_id BIGINT NOT NULL,
    source_id VARCHAR(255) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    one_time_price DECIMAL(10,2),
    time_frame_id INT,
    duration_units INT,
    amount DECIMAL(10,2)
    --FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE,
    --CONSTRAINT uk_item_price_item UNIQUE (item_id)  -- Ensures one price entry per item
);

ALTER TABLE item_price ALTER COLUMN id RESTART WITH 1000;

create table if not exists cart_content (
    id identity not null primary key,
    cart_id int,
    item_id int,
    action_id int,
    quantity int,
    FOREIGN KEY (cart_id) REFERENCES cart(id) ON DELETE CASCADE,
    foreign key (item_id) references item_price(id) ON DELETE CASCADE
);

ALTER TABLE cart_content ALTER COLUMN id RESTART WITH 1000;


create table if not exists finished_cart (
    id identity not null primary key,
    user_id varchar not null,
    date_created date not null,
    date_modified date,
    date_bought date not null,
    transaction_id varchar not null
);

ALTER TABLE finished_cart ALTER COLUMN id RESTART WITH 1000;


create table if not exists finished_cart_content (
    id identity not null primary key,
    cart_id int,
    item_id int,
    action_id int,
    quantity int,
    FOREIGN KEY (cart_id) REFERENCES finished_cart(id) ON DELETE CASCADE,
    foreign key (item_id) references item_price(id) ON DELETE CASCADE
);

ALTER TABLE finished_cart_content ALTER COLUMN id RESTART WITH 1000;

