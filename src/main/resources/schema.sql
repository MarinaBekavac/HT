create table if not exists actions (
    id identity not null primary key,
    action_id int not null,
    name varchar not null
);

create table if not exists time_frame (
    id identity not null primary key,
    name varchar not null
);

create table if not exists cart (
    id identity not null primary key,
    user_id varchar not null,
    date_created date not null,
    date_modified date,
    date_bought date,
    transaction_id varchar not null
);

ALTER TABLE cart ALTER COLUMN id RESTART WITH 1000;

CREATE TABLE IF NOT EXISTS item (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    source_id VARCHAR(255) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
--    stock_quantity INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE
);

ALTER TABLE item ALTER COLUMN id RESTART WITH 1000;

-- Price table (main price entity)
CREATE TABLE IF NOT EXISTS price (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id BIGINT NOT NULL,
    one_time_price DECIMAL(10,2),
    FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE,
    CONSTRAINT uk_price_item UNIQUE (item_id)  -- Ensures one price entry per item
);

ALTER TABLE price ALTER COLUMN id RESTART WITH 1000;

-- Create one-time price table (1:1 relationship with item)
--CREATE TABLE IF NOT EXISTS one_time_price (
--    item_id BIGINT PRIMARY KEY,
--    price DECIMAL(10,2) NOT NULL,
--    FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE
--);

-- Recurring price table (for multiple recurring options)
CREATE TABLE IF NOT EXISTS recurring_price (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    price_id BIGINT NOT NULL,
    time_frame_id INT NOT NULL,
    duration_units INT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (price_id) REFERENCES price(id) ON DELETE CASCADE
);

ALTER TABLE recurring_price ALTER COLUMN id RESTART WITH 1000;
---- Create recurring price table (1:N relationship with item)
--CREATE TABLE IF NOT EXISTS recurring_price (
--    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--    item_id BIGINT NOT NULL,
--    time_frame_id INT NOT NULL,
--    duration_units INT NOT NULL,
--    price DECIMAL(10,2) NOT NULL,
--    FOREIGN KEY (item_id) REFERENCES item(id) ON DELETE CASCADE
--);

create table if not exists cart_content (
    id identity not null primary key,
    cart_id int,
    item_id int,
    action_id int,
    quantity int,
    FOREIGN KEY (cart_id) REFERENCES cart(id) ON DELETE CASCADE,
    foreign key (item_id) references item(id) ON DELETE CASCADE
);

--ALTER TABLE cart_content ALTER COLUMN id RESTART WITH 1000;